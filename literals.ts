// Literal can be string or number

// –û–¥–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
// –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ —â–æ–± –∑–∞—Ö–∏—Å—Ç–∏—Ç–∏ —Å–µ–±–µ –≤—ñ–¥ –ø–æ–º–∏–ª–æ–∫ + —â–æ–± –∫–æ–¥ –±—É–≤ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π!

//–ó–º—ñ–Ω–Ω–∞ –º–æ–∂–µ –±—É—Ç–∏ —Ç—ñ–ª—å–∫–∏ –æ–¥–Ω–∏–º —ñ–∑ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤

type UserRole = "user" | "guest" | "admin";

function checkTheRole(role: UserRole) {
  if (role === "admin") {
    // "You can log in"
  }
}

type Theme = "black" | "ligth";

function choseThemeBg(color: Theme) {
  if (color === "black") {
    // Our bg is black at the moment
  } else {
    // Our bg is light
  }
}

type ResponseStatus = "ok" | "fail" | "timeout";

function getResponce(res: ResponseStatus) {
  if (res === "ok") {
    return "We have got responce from server";
  }
if(res === "fail") {
    return "Our responce has been canseld"
} 

}

type Status = "success" | "error";

function handle(status: Status) {}

handle("success");
// handle("ok"); // error

//üì¶ –£ –∂–∏—Ç—Ç—ñ —Ü–µ —è–∫...
//–£—è–≤–∏, —Ç–∏ –¥–∞—î—à –ª—é–¥–∏–Ω—ñ –≤–∏–±—ñ—Ä: —á–∞–π, –∫–∞–≤–∞ –∞–±–æ —Å—ñ–∫.
type Drink = "tea" | "coffee" | "juice";
//–Ü –≤–æ–Ω–∞ –Ω–µ –∑–º–æ–∂–µ –∑–∞–º–æ–≤–∏—Ç–∏ "–±–æ—Ä—â" üòÑ ‚Äî –±–æ —Ç–∞–∫–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É –Ω–µ–º–∞.
